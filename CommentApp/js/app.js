"use strict";
/*
    app.js, main Angular application script
    define your module and controllers here
*/

var commentsUrl = 'https://api.parse.com/1/classes/comments';

angular.module('CommentApp', ['ui.bootstrap'])
    .config(function($httpProvider) {
        //Parse required two extra headers sent with every HTTP request: X-Parse-Application-Id, X-Parse-REST-API-Key
        //the first needs to be set to your application's ID value
        //the second needs to be set to your application's REST API key
        //both of these are generated by Parse when you create your application via their web site
        //the following lines will add these as default headers so that they are sent with every
        //HTTP request we make in this application
        
        $httpProvider.defaults.headers.common['X-Parse-Application-Id'] = 'arv1YzF7uSXDE4tSJQ04Z5SIPkHR7ZILh8kMSXCe';
        $httpProvider.defaults.headers.common['X-Parse-REST-API-Key'] = 'vJqNaByip76EtvQhhg31W8yJG6YcCClLWAtbGRpA';

        //sensei's parse thing
        //$httpProvider.defaults.headers.common['X-Parse-Application-Id'] = 'Bscio0eqlFGCVvY5krGNTFGuuVYNovPydInQcmpG';
        //$httpProvider.defaults.headers.common['X-Parse-REST-API-Key'] = 'VA6eUDFjBo5aKkwVUPzyTG7vXyGVVbK5vcLa89ex';
	    })
	.controller('CommentController', function($scope, $http){
		$scope.loading = false;
		$scope.refreshComments = function(){
            $scope.loading = true;
            $http.get(commentsUrl + '?order=score')
                .success(function(data){ //data is the data received from the get call
                    $scope.comments = data.results;
                })
                .error(function(err){
                    $scope.errorMessage = err;
                })
                .finally(function(){
                    $scope.loading = false;
                });
        };

        $scope.refreshComments();
        $scope.newComment = {score: 0};

        $scope.addComment = function(){
        	$scope.loading = true;
            $http.post(commentsUrl, $scope.newComment)
                .success(function(responseData){
                    $scope.newComment.objectId = responseData.objectId;
                    $scope.comments.push($scope.newComment);
                    $scope.newComment = {score: 0};
                })
                .error(function(){
                    $scope.errorMessage = err;
                })
                .finally(function(){
                    $scope.loading = false;
                });
        };

        $scope.updateComment = function(comment){
        	$scope.loading = true;
            $http.put(commentsUrl + '/'+ comment.objectId, comment)
                .success(function(){

                })
                .error(function(err){
                    $scope.errorMessage = err;
                })
                .finally(function(){
                    $scope.loading = false;
                });
        };

        $scope.deleteComment = function(comment) {
        	$scope.loading = true;
			$http.delete(commentsUrl + '/' + comment.objectId, comment)
				.success(function() {
					$scope.refreshComments();
				})
				.error(function(err) {
					$scope.errorMessage = err;
				})
				.finally(function(){
                    $scope.loading = false;
                });
		};

		$scope.incrementVotes = function(comment, amount){
			if(comment.votes == 0 && amount == -1){
				return;
			}
            $scope.loading = true;
            $http.put(commentsUrl + '/' + comment.objectId, {
                votes: {
                    __op: 'Increment',
                    amount: amount
                }
            })
                .success(function(responseData){
                    comment.votes = responseData.votes;
                })
                .error(function(responseData){
                })
                .finally(function(){
                    $scope.loading = false;
                });
        };
	});